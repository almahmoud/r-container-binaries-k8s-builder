+ Rscript -e 'Sys.setenv(BIOCONDUCTOR_USE_CONTAINER_REPOSITORY=FALSE);
  p <- .libPaths();
  p <- c('\''/tmp/library'\'', '\''/mnt/library'\'', p);
  .libPaths(p);
  if(BiocManager::install('\''qusage'\'', INSTALL_opts = '\''--build'\'', update = TRUE, quiet = FALSE, dependencies=TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
'getOption("repos")' replaces Bioconductor standard repositories, see
'help("repositories", package = "BiocManager")' for details.
Replacement repositories:
    CRAN: https://cloud.r-project.org
Bioconductor version 3.23 (BiocManager 1.30.26), R Under development (unstable)
  (2025-10-28 r88973)
Installing package(s) 'qusage'
also installing the dependencies ‘estimability’, ‘emmeans’, ‘fftw’

trying URL 'https://cloud.r-project.org/src/contrib/estimability_1.5.1.tar.gz'
trying URL 'https://cloud.r-project.org/src/contrib/emmeans_2.0.0.tar.gz'
trying URL 'https://cloud.r-project.org/src/contrib/fftw_1.0-9.tar.gz'
trying URL 'https://bioconductor.org/packages/3.23/bioc/src/contrib/qusage_2.45.0.tar.gz'
* installing *source* package ‘estimability’ ...
** this is package ‘estimability’ version ‘1.5.1’
** package ‘estimability’ successfully unpacked and MD5 sums checked
** using staged installation
** R
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘estimability’ as ‘estimability_1.5.1_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (estimability)
* installing *source* package ‘fftw’ ...
** this is package ‘fftw’ version ‘1.0-9’
** package ‘fftw’ successfully unpacked and MD5 sums checked
** using staged installation
checking for gcc... gcc -std=gnu2x
checking whether the C compiler works... yes
checking for C compiler default output file name... a.out
checking for suffix of executables... 
checking whether we are cross compiling... no
checking for suffix of object files... o
checking whether the compiler supports GNU C... yes
checking whether gcc -std=gnu2x accepts -g... yes
checking for gcc -std=gnu2x option to enable C11 features... none needed
checking how to run the C preprocessor... gcc -std=gnu2x -E
checking for gcc... (cached) gcc -std=gnu2x
checking whether the compiler supports GNU C... (cached) yes
checking whether gcc -std=gnu2x accepts -g... (cached) yes
checking for gcc -std=gnu2x option to enable C11 features... (cached) none needed
checking for pkg-config... /usr/bin/pkg-config
checking pkg-config is at least version 0.9.0... yes
checking for FFTW... yes
configure: creating ./config.status
config.status: creating src/Makevars
** libs
using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’
gcc -std=gnu2x -I"/usr/local/lib/R/include" -DNDEBUG -I/usr/local/include   -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c fftw.c -o fftw.o
gcc -std=gnu2x -shared -L/usr/local/lib/R/lib -L/usr/local/lib -o fftw.so fftw.o -lfftw3 -L/usr/local/lib/R/lib -lR
installing to /tmp/library/00LOCK-fftw/00new/fftw/libs
** R
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** testing if installed package can be loaded from temporary location
** checking absolute paths in shared objects and dynamic libraries
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘fftw’ as ‘fftw_1.0-9_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (fftw)
* installing *source* package ‘emmeans’ ...
** this is package ‘emmeans’ version ‘2.0.0’
** package ‘emmeans’ successfully unpacked and MD5 sums checked
** using staged installation
** R
** data
*** moving datasets to lazyload DB
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
*** copying figures
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘emmeans’ as ‘emmeans_2.0.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (emmeans)
* installing *source* package ‘qusage’ ...
** this is package ‘qusage’ version ‘2.45.0’
** using staged installation
** R
** data
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘qusage’ as ‘qusage_2.45.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (qusage)

The downloaded source packages are in
	‘/tmp/RtmpIfib83/downloaded_packages’
Old packages: 'promises'

real	0m21.123s
user	0m17.395s
sys	0m5.425s
