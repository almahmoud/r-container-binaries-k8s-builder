name: Finish Build Cycle

on:
  workflow_dispatch:

jobs:
  finish-cycle:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT }}
          persist-credentials: true

      - name: Update to latest
        run: |
          git pull --rebase
          git reset --hard HEAD

      - name: Save kubeconfig
        shell: bash
        run: mkdir -p ~/.kube && echo "${{ secrets.KUBECONFIG }}" > ~/.kube/config
      
      - name: Install Kubectl
        run: |
          curl -LO "https://storage.googleapis.com/kubernetes-release/release/v1.24.4/bin/linux/amd64/kubectl" && \
          chmod +x ./kubectl && \
          mv ./kubectl /usr/local/bin/kubectl && \
          kubectl version

      - name: Get build identifier
        id: get_build_id
        run: |
          # Extract build ID from branch name
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          BUILD_ID=$(echo "${BRANCH_NAME}" | sed 's|build/||' | tr '/' '-')
          echo "build_id=${BUILD_ID}" >> $GITHUB_OUTPUT
          echo "Using Build ID: ${BUILD_ID}"

      - name: Finish Build Cycle
        env:
          RCLONE_CONF: ${{ secrets.RCLONE_CONF }}
        run: |
          set -euxo pipefail
          BUILD_ID="${{ steps.get_build_id.outputs.build_id }}"
          
          # Verify required files exist
          if [[ ! -f "CONTAINER_BASE_IMAGE.bioc" ]]; then
            echo "Error: CONTAINER_BASE_IMAGE.bioc not found"
            exit 1
          fi
          
          # Get container image
          CONTAINER=$(cat "CONTAINER_BASE_IMAGE.bioc")
          echo "Using container image: ${CONTAINER}"
          
          # Get Bioc version
          BIOC_VERSION=$(cat "bioc_version")
          echo "Using Bioc version: ${BIOC_VERSION}"
          
          # Get container name
          CONTAINER_NAME="bioconductor_docker"
          if [[ -f "container_name" ]]; then
            CONTAINER_NAME=$(cat "container_name")
          fi
          echo "Using container name: ${CONTAINER_NAME}"
          
          # Construct packages URL
          OLD_PACKAGES_URL="https://storage.googleapis.com/bioconductor-packages/${BIOC_VERSION}/container-binaries/${CONTAINER_NAME}/src/contrib/PACKAGES"
          echo "Using packages URL: ${OLD_PACKAGES_URL}"
          
          # Calculate truncated build ID for namespace
          BUILD_ID_CLEAN=$(echo "${BUILD_ID}" | tr '[:upper:]' '[:lower:]' | tr '.' '-' | tr -cd '[:alnum:]-')
          VERSION_SUFFIX="${BUILD_ID_CLEAN: -3}"
          DATE_PART=$(echo "$BUILD_ID_CLEAN" | cut -d'-' -f1-3 | tr -d '-')
          CONTAINER_HINT=$(echo "$BUILD_ID_CLEAN" | sed 's/^[0-9-]*-[0-9]*-//' | sed 's/-[^-]*$//' | cut -c1-4)
          BUILD_ID_SHORT="${DATE_PART}-${CONTAINER_HINT}-${VERSION_SUFFIX}"
          NAMESPACE="ns-${BUILD_ID_SHORT}"
          
          # Check for running jobs before finishing
          RUNNING_JOBS=$(kubectl get jobs -n "${NAMESPACE}" -l app=bioc-builder -o name 2>/dev/null | wc -l || echo "0")
          
          if [[ "${RUNNING_JOBS}" != "0" ]]; then
            echo "Warning: ${RUNNING_JOBS} jobs are still running. Proceeding with finish anyway..."
          fi
          
          # Execute finish cycle script
          bash ./.github/scripts/finish_cycle.sh "${BUILD_ID}" "${OLD_PACKAGES_URL}" "${CONTAINER}"
          
          # Record completion status
          echo "Build cycle finished successfully"

      - name: Commit and Push Results
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git add . || true
          
          if ! git diff --staged --quiet; then
            git commit -m "Finish build cycle: ${{ steps.get_build_id.outputs.build_id }}"
            git push || (git pull --rebase && git push)
          else
            echo "No changes to commit"
          fi
